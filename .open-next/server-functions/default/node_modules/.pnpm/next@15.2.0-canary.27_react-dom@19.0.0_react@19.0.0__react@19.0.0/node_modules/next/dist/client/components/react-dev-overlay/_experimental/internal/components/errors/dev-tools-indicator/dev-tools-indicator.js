"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DevToolsIndicator", {
    enumerable: true,
    get: function() {
        return DevToolsIndicator;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _toast = require("../../toast");
const _nextlogo = require("./internal/next-logo");
const _initializefornewoverlay = require("../../../../../../../dev/dev-build-indicator/internal/initialize-for-new-overlay");
const _devrenderindicator = require("./internal/dev-render-indicator");
const _usedelayedrender = require("./internal/use-delayed-render");
const _usekeyboardshortcut = require("../../../hooks/use-keyboard-shortcut");
function DevToolsIndicator(param) {
    let { state, readyErrorsLength, setIsErrorOverlayOpen } = param;
    const [isDevToolsIndicatorOpen, setIsDevToolsIndicatorOpen] = (0, _react.useState)(true);
    // Register `(cmd|ctrl) + .` to show/hide the error indicator.
    (0, _usekeyboardshortcut.useKeyboardShortcut)({
        key: '.',
        modifiers: [
            _usekeyboardshortcut.MODIFIERS.CTRL_CMD
        ],
        callback: ()=>{
            setIsDevToolsIndicatorOpen(!isDevToolsIndicatorOpen);
            setIsErrorOverlayOpen(!isDevToolsIndicatorOpen);
        }
    });
    return isDevToolsIndicatorOpen && /*#__PURE__*/ (0, _jsxruntime.jsx)(DevToolsPopover, {
        semver: state.versionInfo.installed,
        issueCount: readyErrorsLength,
        isStaticRoute: state.staticIndicator,
        hide: ()=>{
            setIsDevToolsIndicatorOpen(false);
        },
        setIsErrorOverlayOpen: setIsErrorOverlayOpen,
        isTurbopack: !!process.env.TURBOPACK
    });
}
const ANIMATE_OUT_DURATION_MS = 200;
const ANIMATE_OUT_TIMING_FUNCTION = 'cubic-bezier(0.175, 0.885, 0.32, 1.1)';
const DevToolsPopover = (param)=>{
    let { issueCount, isStaticRoute, semver, isTurbopack, hide, setIsErrorOverlayOpen } = param;
    const popoverRef = (0, _react.useRef)(null);
    const buttonRef = (0, _react.useRef)(null);
    const [isPopoverOpen, setIsPopoverOpen] = (0, _react.useState)(false);
    const { mounted, rendered } = (0, _usedelayedrender.useDelayedRender)(isPopoverOpen, {
        // Intentionally no fade in, makes the UI feel more immediate
        enterDelay: 0,
        // Graceful fade out to confirm that the UI did not break
        exitDelay: ANIMATE_OUT_DURATION_MS
    });
    (0, _react.useEffect)(()=>{
        // Close popover when clicking outside of it or its button
        const handleClickOutside = (event)=>{
            var _popoverRef_current, _buttonRef_current;
            if (!(((_popoverRef_current = popoverRef.current) == null ? void 0 : _popoverRef_current.getBoundingClientRect()) ? event.clientX >= popoverRef.current.getBoundingClientRect().left && event.clientX <= popoverRef.current.getBoundingClientRect().right && event.clientY >= popoverRef.current.getBoundingClientRect().top && event.clientY <= popoverRef.current.getBoundingClientRect().bottom : false) && !(((_buttonRef_current = buttonRef.current) == null ? void 0 : _buttonRef_current.getBoundingClientRect()) ? event.clientX >= buttonRef.current.getBoundingClientRect().left && event.clientX <= buttonRef.current.getBoundingClientRect().right && event.clientY >= buttonRef.current.getBoundingClientRect().top && event.clientY <= buttonRef.current.getBoundingClientRect().bottom : false)) {
                setIsPopoverOpen(false);
            }
        };
        // Close popover when pressing escape
        const handleKeyDown = (event)=>{
            if (event.key === 'Escape') {
                setIsPopoverOpen(false);
            }
        };
        document.addEventListener('mousedown', handleClickOutside);
        document.addEventListener('keydown', handleKeyDown);
        return ()=>{
            document.removeEventListener('mousedown', handleClickOutside);
            document.removeEventListener('keydown', handleKeyDown);
        };
    }, []);
    const togglePopover = ()=>setIsPopoverOpen((prev)=>!prev);
    const onIssuesClick = ()=>issueCount > 0 ? setIsErrorOverlayOpen(true) : null;
    const onLogoClick = ()=>{
        togglePopover();
        onIssuesClick();
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_toast.Toast, {
        "data-nextjs-toast": true,
        style: {
            boxShadow: 'none',
            zIndex: 2147483647
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                ref: buttonRef,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_nextlogo.NextLogo, {
                    issueCount: issueCount,
                    onLogoClick: onLogoClick,
                    onIssuesClick: onIssuesClick,
                    isDevBuilding: (0, _initializefornewoverlay.useIsDevBuilding)(),
                    isDevRendering: (0, _devrenderindicator.useIsDevRendering)(),
                    "aria-haspopup": "true",
                    "aria-expanded": isPopoverOpen,
                    "aria-controls": "dev-tools-popover",
                    "data-nextjs-dev-tools-button": true
                }, issueCount)
            }),
            mounted && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                ref: popoverRef,
                id: "dev-tools-popover",
                role: "dialog",
                "aria-labelledby": "dev-tools-title",
                "data-nextjs-dev-tools-popover": true,
                "data-rendered": rendered,
                style: {
                    '--animate-out-duration-ms': "" + ANIMATE_OUT_DURATION_MS + "ms",
                    '--animate-out-timing-function': ANIMATE_OUT_TIMING_FUNCTION
                },
                tabIndex: -1,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        "data-nextjs-dev-tools-content": true,
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            "data-nextjs-dev-tools-container": true,
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                                    id: "dev-tools-title",
                                    style: {
                                        display: 'none'
                                    },
                                    children: "Dev Tools Options"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(IndicatorRow, {
                                    label: "Hide Dev Tools",
                                    value: /*#__PURE__*/ (0, _jsxruntime.jsx)(DevToolsShortcutGroup, {}),
                                    onClick: hide
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(IndicatorRow, {
                                    "data-nextjs-route-type": isStaticRoute ? 'static' : 'dynamic',
                                    label: "Route",
                                    value: isStaticRoute ? 'Static' : 'Dynamic'
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(IndicatorRow, {
                                    label: "Issues",
                                    value: /*#__PURE__*/ (0, _jsxruntime.jsx)(IssueCount, {
                                        count: issueCount
                                    }),
                                    onClick: onIssuesClick
                                })
                            ]
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        "data-nextjs-dev-tools-footer": true,
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            "data-nextjs-dev-tools-footer-text": true,
                            children: [
                                semver ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                    "data-nextjs-dev-tools-version": true,
                                    children: [
                                        "Next.js ",
                                        semver
                                    ]
                                }) : null,
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                    "data-nextjs-dev-tools-version": true,
                                    children: [
                                        "Turbopack ",
                                        isTurbopack ? 'enabled' : 'not enabled'
                                    ]
                                })
                            ]
                        })
                    })
                ]
            })
        ]
    });
};
const IndicatorRow = (param)=>{
    let { label, value, onClick, ...props } = param;
    const Wrapper = onClick ? 'button' : 'div';
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(Wrapper, {
        "data-nextjs-dev-tools-row": true,
        onClick: onClick,
        ...props,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                "data-nextjs-dev-tools-row-label": true,
                children: label
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                "data-nextjs-dev-tools-row-value": true,
                children: value
            })
        ]
    });
};
const IssueCount = (param)=>{
    let { count } = param;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
        "data-nextjs-dev-tools-issue-count": true,
        "data-has-issues": count > 0,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
            "data-nextjs-dev-tools-issue-text": true,
            "data-has-issues": count > 0,
            children: count
        })
    });
};
function DevToolsShortcutGroup() {
    const isMac = // Feature detect for `navigator.userAgentData` which is experimental:
    // https://developer.mozilla.org/en-US/docs/Web/API/NavigatorUAData/platform
    'userAgentData' in navigator ? navigator.userAgentData.platform === 'macOS' : // https://developer.mozilla.org/en-US/docs/Web/API/Navigator/platform#examples
    navigator.platform.indexOf('Mac') === 0 || navigator.platform === 'iPhone';
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
        "data-nextjs-dev-tools-shortcut-group": true,
        children: [
            isMac ? /*#__PURE__*/ (0, _jsxruntime.jsx)(CmdIcon, {}) : /*#__PURE__*/ (0, _jsxruntime.jsx)(CtrlIcon, {}),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(DotIcon, {})
        ]
    });
}
function CmdIcon() {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
        "data-nextjs-dev-tools-icon": true,
        children: "⌘"
    });
}
function CtrlIcon() {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
        "data-nextjs-dev-tools-icon": true,
        "data-nextjs-dev-tools-ctrl-icon": true,
        children: "ctrl"
    });
}
function DotIcon() {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
        "data-nextjs-dev-tools-icon": true,
        children: "."
    });
}

if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
  Object.defineProperty(exports.default, '__esModule', { value: true });
  Object.assign(exports.default, exports);
  module.exports = exports.default;
}

//# sourceMappingURL=dev-tools-indicator.js.map