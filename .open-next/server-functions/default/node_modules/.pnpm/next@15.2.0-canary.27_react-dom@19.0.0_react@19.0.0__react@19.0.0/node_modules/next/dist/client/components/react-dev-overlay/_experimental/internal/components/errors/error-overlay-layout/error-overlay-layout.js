"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    ErrorOverlayLayout: null,
    styles: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ErrorOverlayLayout: function() {
        return ErrorOverlayLayout;
    },
    styles: function() {
        return styles;
    }
});
const _tagged_template_literal_loose = require("@swc/helpers/_/_tagged_template_literal_loose");
const _jsxruntime = require("react/jsx-runtime");
const _dialog = require("../../dialog");
const _erroroverlaytoolbar = require("../error-overlay-toolbar/error-overlay-toolbar");
const _erroroverlaybottomstacks = require("../error-overlay-bottom-stacks/error-overlay-bottom-stacks");
const _erroroverlayfooter = require("../error-overlay-footer/error-overlay-footer");
const _nooptemplate = require("../../../helpers/noop-template");
const _errormessage = require("../error-message/error-message");
const _errortypelabel = require("../error-type-label/error-type-label");
const _erroroverlayfloatingheader = require("../error-overlay-floating-header/error-overlay-floating-header");
const _dialog1 = require("../dialog/dialog");
const _header = require("../dialog/header");
const _body = require("../dialog/body");
const _callstack = require("../call-stack/call-stack");
const _overlay = require("../overlay/overlay");
function _templateObject() {
    const data = _tagged_template_literal_loose._([
        "\n  ",
        "\n  ",
        "\n  ",
        "\n  ",
        "\n\n  ",
        "\n  ",
        "\n  ",
        "\n  ",
        "\n  ",
        "\n"
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
function ErrorOverlayLayout(param) {
    let { errorMessage, errorType, children, errorCode, error, debugInfo, isBuildError, onClose, versionInfo, readyErrors, activeIdx, setActiveIndex, footerMessage, isTurbopack } = param;
    var _readyErrors_length;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_overlay.ErrorOverlayOverlay, {
        fixed: isBuildError,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog1.ErrorOverlayDialog, {
            onClose: onClose,
            isTurbopack: isTurbopack,
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogContent, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_erroroverlayfloatingheader.ErrorOverlayFloatingHeader, {
                        readyErrors: readyErrors,
                        activeIdx: activeIdx,
                        setActiveIndex: setActiveIndex,
                        versionInfo: versionInfo,
                        isTurbopack: isTurbopack
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_header.ErrorOverlayDialogHeader, {
                        isTurbopack: isTurbopack,
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "nextjs__container_errors__error_title",
                                // allow assertion in tests before error rating is implemented
                                "data-nextjs-error-code": errorCode,
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_errortypelabel.ErrorTypeLabel, {
                                        errorType: errorType
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_erroroverlaytoolbar.ErrorOverlayToolbar, {
                                        error: error,
                                        debugInfo: debugInfo
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_errormessage.ErrorMessage, {
                                errorMessage: errorMessage
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_body.ErrorOverlayDialogBody, {
                        children: children
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogFooter, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_erroroverlayfooter.ErrorOverlayFooter, {
                                footerMessage: footerMessage,
                                errorCode: errorCode
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_erroroverlaybottomstacks.ErrorOverlayBottomStacks, {
                                errorsCount: (_readyErrors_length = readyErrors == null ? void 0 : readyErrors.length) != null ? _readyErrors_length : 0,
                                activeIdx: activeIdx != null ? activeIdx : 0
                            })
                        ]
                    })
                ]
            })
        })
    });
}
const styles = (0, _nooptemplate.noop)(_templateObject(), _overlay.OVERLAY_STYLES, _dialog1.DIALOG_STYLES, _header.DIALOG_HEADER_STYLES, _body.DIALOG_BODY_STYLES, _erroroverlayfloatingheader.styles, _errortypelabel.styles, _errormessage.styles, _erroroverlaytoolbar.styles, _callstack.CALL_STACK_STYLES);

if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
  Object.defineProperty(exports.default, '__esModule', { value: true });
  Object.assign(exports.default, exports);
  module.exports = exports.default;
}

//# sourceMappingURL=error-overlay-layout.js.map