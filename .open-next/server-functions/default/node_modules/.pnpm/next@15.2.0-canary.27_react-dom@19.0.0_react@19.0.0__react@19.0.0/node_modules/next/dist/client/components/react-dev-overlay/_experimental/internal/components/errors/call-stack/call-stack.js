"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    CALL_STACK_STYLES: null,
    CallStack: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    CALL_STACK_STYLES: function() {
        return CALL_STACK_STYLES;
    },
    CallStack: function() {
        return CallStack;
    }
});
const _tagged_template_literal_loose = require("@swc/helpers/_/_tagged_template_literal_loose");
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _callstackframe = require("../../call-stack-frame/call-stack-frame");
const _nooptemplate = require("../../../helpers/noop-template");
function _templateObject() {
    const data = _tagged_template_literal_loose._([
        "\n  .error-overlay-call-stack-container {\n    border-top: 1px solid var(--color-gray-400);\n    padding: var(--size-4) var(--size-3);\n  }\n\n  .error-overlay-call-stack-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    margin-bottom: var(--size-3);\n\n    padding: 0 var(--size-2);\n  }\n\n  .error-overlay-call-stack-title {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: var(--size-2);\n\n    margin: 0;\n\n    color: var(--color-gray-1000);\n    font-size: var(--size-font);\n    font-weight: 500;\n    line-height: var(--size-5);\n  }\n\n  .error-overlay-call-stack-count {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: var(--size-5);\n    height: var(--size-5);\n    padding: var(--size-0_5) var(--size-1_5);\n    gap: var(--size-1);\n\n    color: var(--color-gray-1000);\n    text-align: center;\n    font-size: var(--size-font-11);\n    font-weight: 500;\n    line-height: var(--size-4);\n\n    border-radius: var(--rounded-full);\n    background: var(--color-gray-300);\n  }\n\n  .error-overlay-call-stack-ignored-list-toggle-button {\n    all: unset;\n    color: var(--color-gray-900);\n    font-size: var(--size-font-small);\n    line-height: var(--size-5);\n\n    &:focus {\n      outline: none;\n    }\n  }\n"
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
function CallStack(param) {
    let { frames } = param;
    const [isIgnoreListOpen, setIsIgnoreListOpen] = (0, _react.useState)(false);
    const { filteredFrames, ignoreListLength } = (0, _react.useMemo)(()=>{
        const filtered = [];
        let ignoredLength = 0;
        for (const frame of frames){
            if (isIgnoreListOpen || !frame.ignored) {
                filtered.push(frame);
            }
            if (frame.ignored) {
                ignoredLength++;
            }
        }
        return {
            filteredFrames: filtered,
            ignoreListLength: ignoredLength
        };
    }, [
        frames,
        isIgnoreListOpen
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "error-overlay-call-stack-container",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "error-overlay-call-stack-header",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                        className: "error-overlay-call-stack-title",
                        children: [
                            "Call Stack",
                            ' ',
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "error-overlay-call-stack-count",
                                children: frames.length
                            })
                        ]
                    }),
                    ignoreListLength > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                        "data-expand-ignore-button": isIgnoreListOpen,
                        className: "error-overlay-call-stack-ignored-list-toggle-button",
                        onClick: ()=>setIsIgnoreListOpen(!isIgnoreListOpen),
                        children: [
                            (isIgnoreListOpen ? 'Hide' : 'Show') + " " + ignoreListLength + " Ignore-listed Frames",
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(ChevronUpDown, {})
                        ]
                    })
                ]
            }),
            filteredFrames.map((frame, frameIndex)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_callstackframe.CallStackFrame, {
                    frame: frame
                }, "call-stack-leading-" + frameIndex))
        ]
    });
}
function ChevronUpDown() {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M8.70722 2.39641C8.3167 2.00588 7.68353 2.00588 7.29301 2.39641L4.46978 5.21963L3.93945 5.74996L5.00011 6.81062L5.53044 6.28029L8.00011 3.81062L10.4698 6.28029L11.0001 6.81062L12.0608 5.74996L11.5304 5.21963L8.70722 2.39641ZM5.53044 9.71963L5.00011 9.1893L3.93945 10.25L4.46978 10.7803L7.29301 13.6035C7.68353 13.994 8.3167 13.994 8.70722 13.6035L11.5304 10.7803L12.0608 10.25L11.0001 9.1893L10.4698 9.71963L8.00011 12.1893L5.53044 9.71963Z",
            fill: "currentColor"
        })
    });
}
const CALL_STACK_STYLES = (0, _nooptemplate.noop)(_templateObject());

if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
  Object.defineProperty(exports.default, '__esModule', { value: true });
  Object.assign(exports.default, exports);
  module.exports = exports.default;
}

//# sourceMappingURL=call-stack.js.map